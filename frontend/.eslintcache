[{"C:\\Tim-Van-den-Borre\\Application-Frameworks-Webshop\\frontend\\src\\index.js":"1","C:\\Tim-Van-den-Borre\\Application-Frameworks-Webshop\\frontend\\src\\App.js":"2","C:\\Tim-Van-den-Borre\\Application-Frameworks-Webshop\\frontend\\src\\reportWebVitals.js":"3","C:\\Tim-Van-den-Borre\\Application-Frameworks-Webshop\\frontend\\src\\components\\Products.js":"4","C:\\Tim-Van-den-Borre\\Application-Frameworks-Webshop\\frontend\\src\\components\\Filter.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":278,"mtime":1607433939379,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":2837,"mtime":1607438035302,"results":"10","hashOfConfig":"7"},{"size":1822,"mtime":1607438021737,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"zyqtg8",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Tim-Van-den-Borre\\Application-Frameworks-Webshop\\frontend\\src\\index.js",[],["25","26"],"C:\\Tim-Van-den-Borre\\Application-Frameworks-Webshop\\frontend\\src\\App.js",[],"C:\\Tim-Van-den-Borre\\Application-Frameworks-Webshop\\frontend\\src\\reportWebVitals.js",[],"C:\\Tim-Van-den-Borre\\Application-Frameworks-Webshop\\frontend\\src\\components\\Products.js",["27","28"],"import React, { Component } from 'react'\r\nimport Filter from './Filter'\r\n\r\nclass Products extends Component {\r\n    state = {\r\n        Products: []\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        fetch(\"http://localhost:8080/api/products\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"accept\": \"application/json\",\r\n            }\r\n        })\r\n            .then((response) => {\r\n                if (response.ok){\r\n                    return response.json();\r\n                }\r\n                console.log(\"error: \" + response);\r\n            })\r\n            .then((json) => {\r\n                console.log(\"Products:\" + json)\r\n                this.setState({Products: json});\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"error: \" + error);\r\n            })\r\n    }\r\n\r\n    filteredProducts = (category) => {\r\n        if (category === 'None') this.componentDidMount()\r\n        fetch(`http://localhost:8080/api/products?category=${category}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"accept\": \"application/json\",\r\n            }\r\n        })\r\n            .then((response) => {\r\n                if (response.ok) return response.json()\r\n                console.log(\"error: \" + response);\r\n            })\r\n            .then((json) => {\r\n                console.log(\"Products: \" + json);\r\n                this.setState({ Products: json });\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"error: \" + error);\r\n            })\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div className=\"mt-4\">\r\n                <h2>Products</h2>\r\n                <div className=\"row\">\r\n                    <Filter onSubmit={this.filteredProducts} />\r\n                </div>\r\n                <div className=\"row\">\r\n                    {this.state.Products.map((product, index) => {\r\n                        return (\r\n                            <div className=\"col-md-4\" key={product.id}>\r\n                                <div className=\"card\">\r\n                                    <img src=\"#\" className=\"card-img-top\" alt=\"image\" />\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">{product.name}</h5>\r\n                                        <p className=\"card-text\">{product.description}</p>\r\n                                        <p className=\"card-text\">{product.price}</p>\r\n                                        <a href=\"#\" className=\"btn btn-secondary\">Add to cart</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Products\r\n","C:\\Tim-Van-den-Borre\\Application-Frameworks-Webshop\\frontend\\src\\components\\Filter.js",[],["29","30"],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":64,"column":37,"nodeType":"37","endLine":64,"endColumn":89},{"ruleId":"38","severity":1,"message":"39","line":69,"column":41,"nodeType":"37","endLine":69,"endColumn":83},{"ruleId":"31","replacedBy":"40"},{"ruleId":"33","replacedBy":"41"},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["42"],["43"],"no-global-assign","no-unsafe-negation"]